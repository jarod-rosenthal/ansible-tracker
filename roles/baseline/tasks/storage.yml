### Notes: we need to fix the following logics
# 1. We should always check that the disk is mounted
# 2. We should have an option to force a reformat

- name: Create list of mounted devices
  set_fact:
    mounted_devices: "{{ ansible_mounts|json_query('[].device') }}"

- name: Get mounted path for {{ storage_disk }}
  set_fact:
    storage_mount: "{{ item.mount }}"
  with_items: "{{ ansible_mounts }}"
  when: item.device == storage_disk

- name: Stop service docker, if started
  service:
    name: docker
    state: stopped

- name: Unmount {{ storage_disk }} from {{ storage_mount }}
  ansible.posix.mount:
    path: '{{ storage_mount }}'
    state: unmounted
  when: storage_disk in mounted_devices

- name: Update list of mounted devices
  set_fact:
    mounted_devices: "{{ ansible_mounts|json_query('[].device') }}"

- name: Update mounted path for {{ storage_disk }}
  set_fact:
    storage_mount: "{{ item.mount }}"
  with_items: "{{ ansible_mounts }}"
  when: item.device == storage_disk

- name: Unmount again if the auto mount picked it up
  ansible.posix.mount:
    path: '{{ storage_mount }}'
    state: unmounted
  when: storage_disk in mounted_devices

- name: Loading attached storage device information
  community.general.parted: device={{ storage_disk }} unit=MiB
  register: storage_info

- name: Remove all partitions from disk
  community.general.parted:
    device: '{{ storage_disk }}'
    number: '{{ item.num }}'
    state: absent
  loop: '{{ storage_info.partitions }}'

- name: Setting up Sky Hub Storage Device
  community.general.parted:
    device: '{{ storage_disk }}'
    number: 1
    state: present
    fs_type: ext4
    label: gpt

- name: Formatting Sky Hub Storage Filesystem
  community.general.filesystem:
    fstype: ext4
    dev: '{{ storage_disk }}'
    opts: -L SKYHUB_STORAGE

- name: Mounting Sky Hub Storage device
  ansible.posix.mount:
    path: /skyhub/storage
    src: LABEL=SKYHUB_STORAGE
    fstype: ext4
    state: mounted
    opts: defaults,noauto